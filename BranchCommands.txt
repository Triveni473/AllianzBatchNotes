Dev2 machine history

 1  git --version
    2  git config --global user.name dev2
    3  git config --global user.email dev2@gmail.com
     9  git clone -b dev2 https://github.com/onlineTrainingguy/BankingProj.git
   10  cd BankingProj/
   11  git branch
   12  ls
   13  touch dev2.java
   14  git status
   15  git add .
   16  git commit -m "dev2.java file is added"
   17  git status
   18  git log --oneline
   19  git push origin dev2
   20  ls
   21  git pull origin dev2
   22  ls
   23  hostname node3
   24  bash

Dev1 machine history
1  git version
    2  git config --global user.name node2user
    3  git config --global user.email node2@gmail.com
    4  git config --global user.name dev1
    5  git clone -b dev1 https://github.com/onlineTrainingguy/BankingProj.git
    6  ls
    7  cd BankingProj/
    8  ls
    9  git log --oneline
   10  git branch
   11  touch dev1.java
   12  git status
   13  git add .
   14  git commit -m "dev1.java file is added"
   15  git log --oneline
   16  git push origin dev1
   17  git pull origin dev1
   18  ls
   19  hostname node2
   20  bash

Main branch history
 1  git branch
    2  git branch dev1
    3  git branch
    4  git branch dev2
    5  git branch
    6  git checkout dev1
    7  git branch
    8  git checkout -
    9  git branch -D dev1
   10  git branch
   11  git branch dev1
   12  git branch
   13  git push origin dev1
   14  git push origin dev2
   15  ls
   16  git log --oneline
   17  git checkout dev1
   18  git log --oneline
   19  git branch
   20  git checkout main
   21  git pull origin main
   22  git checkout -
   23  git pull origin dev1
   24  ls
   25  git checkout dev2
   26  git pull origin dev2
   27  git branch
   28  git checkout main
   29  git merge dev1
   30  git merge dev2
   31  git log --oneline
   32  git checkout dev1
   33  git merge main
   34  ls
   35  git push origin dev2
   36  git push origin dev1
   37  git checkout dev2
   38  git merge main
   39  git push origin dev2
 41  git checkout dev1
   42  ls
   43  echo "This changes is done by dev1" > dao.java
   44  git status
   45  git add .
   46  git commit -m "dao.java file is modified by dev1"
   47  cat dao.java
   48  git checkout dev2
   49  cat dao.java
   50  echo "this change is done by dev2" > dao.java
   51  git status
   52  git add .
   53  git commit -m "dao.java file is modified by dev2"
   54  cat dao.java
   55  git checkout main
   56  git merge dev1
   57  git merge dev2
   58  git mergetool
   59  git mergetool --tool vimdiff
   60  ls
   61  git status
   62  rm dao_*.*
   63  git status
   64  rm dao.java.orig
   65  git status
   66  cat dao.java
   67  git commit -m "merge conflict is resolved"
   68  git checkout dev1
   69  cat dao.java
   70  git merge main
   71  cat dao.java
   72  git checkout dev2
   73  cat dao.java
   74  git merge main
   75  cat dao.java

 1  cd ..
    2  mkdir mr
    3  cd mr/
    4  git init
    5  touch m1 m2 m3
    6  git add .
    7  git commit -m "m1" m1
    8  git commit -m "m2" m2
    9  git commit -m "m3" m3
   10  git log --oneline
   11  git branch feature
   12  git checkout feature
   13  git log --oneline
   14  touch f1
   15  git add .
   16  git commit -m "f1"
   17  git log --oneline
   18  git checkout -
   19  touch m4
   20  git add .
   21  git commit -m "m4" m4
   22  git log --oneline
   23  git checkout -
   24  git log --oneline
   25  git merge master
   26  ls
   27  git log --oneline
   28  git checkout -
   29  rm -ifr .git/
   30  ls
   31  rm *
   32  ls
   33  touch m1 m2 m3
   34  git add .
   35  git init
   36  git add .
   37  git status
   38  git commit -m "m1" m1
   39  git commit -m "m2" m2
   40  git commit -m "m3" m3
   41  git log --oneline
   42  git branch feature
   43  git checkout feature
   44  git log --oneline
   45  touch f1
   46  git add .
   47  git commit -m "f1"
   48  git log --oneline
   49  git checkout -
   50  touch m4
   51  git add .
   52  git commit -m "m4"
   53  git log --oneline
   54  git checkout -
   55  ls
   56  git log --oneline
   57  git rebase master
   58  ls
   59  git log --oneline
   60  cd ..
   61  rm -ifr mr
   62  mkdir tagsexample
   63  cd tagsexample/
   64  touch 1 2 3 4
   65  git init
   66  git status
   67  git add .
   68  git commit -m "my version1"
   69  cd ..
   70  cd BankingProj/
   71  ls
   72  git tag v1
   73  git tag
   74  touch v2.0 v2.1
   75  git add .
   76  git commit -m "Release2"
   77  git tag v2
   78  touch v3.1 v3.2
   79  git add .
   80  git commit -m "Relase3"
   81  git tag
   82  git tag v3
   83  git tag
   84  git checkout v1
   85  ls
   86  git checkout v2
   87  ls
   88  git checkout v3
   89  git checkout main
   90  git branch
   91  git checkout dev1
   92  touch devtmp1.java devtmp2.java
   93  git add .
   94  git commit -m "devtmp1.java file is added" devtmp1.java
   95  git commit -m "devtmp2.java file is added" devtmp2.java
   96  git log --oneline
   97  git checkout -
   98  git cherrypick b88e388
   99  git cherry-pick b88e388
  100  ls
  101  git status
  102  git log --oneline
  103  cd ..
  104  mkdir tmpdir
  105  cd tmpdir/
  106  touch 1 2 3 4
  107  git init
  108  git add .
  109  git commit -m "all files are added"
  110  git branch dev1
  111  git checkout dev1
  112  touch nefile.java
  113  git add .
  114  git checkout main
  115  git checkout -
  116  ls
  117  git checkout -
  118  git stash save "new.java file is added in stash"
  119  ls
  120  git checkout -
  121  ls
  122  git checkout -
  123  git stash list
  124  git stash pop
  125  git status
  126  git stash list
  127  git stash save
  128  git stash list
  129  git stash drop  stash@{0}
  130  git stash list
  131  ls
  132  git checkout -
  133  touch test.java test1.java test2.java test3.java
  134  git add .
  135  git commit "test.java" test.java
  136  git commit -m "test1.java" test1.java
  137  git commit -m "test2.java" test2.java
  138  git commit -m "test3.java" test3.java
  139  git log --oneline
  140  git rebase -i HEAD~3
  141  git log --oneline
  142  ls
  143  git branch fix
  144  git branch feature
  145  git branch release
  146  git worktree add hotfix fix
  147  ls
  148  git worktree add feature feature
  149  ls
  150  cd feature/
  151  ls
  152  history
